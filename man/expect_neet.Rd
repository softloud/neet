% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expect_neet.R
\name{expect_neet}
\alias{expect_neet}
\title{Test for non-empty thing of expected type}
\usage{
expect_neet(thing_to_test, expected_type)
}
\arguments{
\item{thing_to_test}{An object to test, such as a numeric, character, list,
etc.}

\item{expected_type}{Expected output of \code{class(thing_to_test)}.

A \emph{neet test} tests for \strong{non-empty} thing of \strong{expected type}. This
is what is referred to as a \emph{boundary condition} test in RStudio's primers
(todo: citation).

These expectations are intended to integrate into minimal testing workflow
\emph{for development} of data analyses. When developing a function, we will change parameters,
and structure of the pipeline. These tests
enable the developer to feel reassured the pipeline's functions are
outputting non-empty thing of expected type, while the developer decides on
the best structure for an analysis pipeline.

A \code{character} string will be checked for being of string-length > 1.

A \code{numeric} is checked for being non-empty.

A \code{numint} is checked for being numeric or integer.

An \code{integer} is checked for being of length > 1.

A `list`` is checked for being of length > 1.

A \code{data.frame} is checked for having at least one row.

A \code{ggplot} object is checked for successfully running.

\code{assert_neet} tests the input is non-empty and of expected type, and
\code{expect_neet} is an expectation for \link{test_that} that checks the output is
non-empty and of expected type
\code{test_neet} is a test for \link{testthat}}
}
\description{
Test for non-empty thing of expected type
}
\seealso{
Other neet Test for non-empty thing of expected type.: 
\code{\link{assert_neet}()},
\code{\link{test_neet}()}
}
\concept{neet Test for non-empty thing of expected type.}
